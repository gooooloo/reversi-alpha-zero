# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chunk.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='chunk.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0b\x63hunk.proto\"\x17\n\x05\x43hunk\x12\x0e\n\x06\x62uffer\x18\x01 \x01(\x0c\"=\n\x04Move\x12\x0b\n\x03\x63ob\x18\x01 \x01(\x0c\x12\n\n\x02pi\x18\x02 \x01(\x0c\x12\t\n\x01z\x18\x03 \x01(\x05\x12\x11\n\tcob_dtype\x18\x04 \x01(\x05\"\x07\n\x05\x45mpty\"\'\n\tModelStep\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0c\n\x04step\x18\x02 \x01(\x05\"/\n\x13ResignFalsePositive\x12\t\n\x01n\x18\x01 \x01(\x05\x12\r\n\x05\x66_p_n\x18\x02 \x01(\x05\"+\n\x07ResignV\x12\x15\n\rshould_resign\x18\x01 \x01(\x05\x12\t\n\x01v\x18\x02 \x01(\x02\x32\xb8\x03\n\nFileServer\x12%\n\x10upload_play_data\x12\x05.Move\x1a\x06.Empty\"\x00(\x01\x12\x32\n\x18list_model_steps_to_eval\x12\x06.Empty\x1a\n.ModelStep\"\x00\x30\x01\x12\x32\n\x18list_model_steps_archive\x12\x06.Empty\x1a\n.ModelStep\"\x00\x30\x01\x12/\n\x15\x64ownload_model_config\x12\n.ModelStep\x1a\x06.Chunk\"\x00\x30\x01\x12/\n\x15\x64ownload_model_weight\x12\n.ModelStep\x1a\x06.Chunk\"\x00\x30\x01\x12-\n\x13report_better_model\x12\n.ModelStep\x1a\x06.Chunk\"\x00\x30\x01\x12&\n\x0cremove_model\x12\n.ModelStep\x1a\x06.Chunk\"\x00\x30\x01\x12>\n\x1creport_resign_false_positive\x12\x14.ResignFalsePositive\x1a\x06.Empty\"\x00\x12\"\n\x0c\x61sk_resign_v\x12\x06.Empty\x1a\x08.ResignV\"\x00\x62\x06proto3')
)




_CHUNK = _descriptor.Descriptor(
  name='Chunk',
  full_name='Chunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='buffer', full_name='Chunk.buffer', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15,
  serialized_end=38,
)


_MOVE = _descriptor.Descriptor(
  name='Move',
  full_name='Move',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cob', full_name='Move.cob', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pi', full_name='Move.pi', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='z', full_name='Move.z', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cob_dtype', full_name='Move.cob_dtype', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=40,
  serialized_end=101,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=103,
  serialized_end=110,
)


_MODELSTEP = _descriptor.Descriptor(
  name='ModelStep',
  full_name='ModelStep',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ModelStep.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='step', full_name='ModelStep.step', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=151,
)


_RESIGNFALSEPOSITIVE = _descriptor.Descriptor(
  name='ResignFalsePositive',
  full_name='ResignFalsePositive',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='n', full_name='ResignFalsePositive.n', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='f_p_n', full_name='ResignFalsePositive.f_p_n', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=153,
  serialized_end=200,
)


_RESIGNV = _descriptor.Descriptor(
  name='ResignV',
  full_name='ResignV',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='should_resign', full_name='ResignV.should_resign', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='v', full_name='ResignV.v', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=202,
  serialized_end=245,
)

DESCRIPTOR.message_types_by_name['Chunk'] = _CHUNK
DESCRIPTOR.message_types_by_name['Move'] = _MOVE
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['ModelStep'] = _MODELSTEP
DESCRIPTOR.message_types_by_name['ResignFalsePositive'] = _RESIGNFALSEPOSITIVE
DESCRIPTOR.message_types_by_name['ResignV'] = _RESIGNV
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Chunk = _reflection.GeneratedProtocolMessageType('Chunk', (_message.Message,), dict(
  DESCRIPTOR = _CHUNK,
  __module__ = 'chunk_pb2'
  # @@protoc_insertion_point(class_scope:Chunk)
  ))
_sym_db.RegisterMessage(Chunk)

Move = _reflection.GeneratedProtocolMessageType('Move', (_message.Message,), dict(
  DESCRIPTOR = _MOVE,
  __module__ = 'chunk_pb2'
  # @@protoc_insertion_point(class_scope:Move)
  ))
_sym_db.RegisterMessage(Move)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'chunk_pb2'
  # @@protoc_insertion_point(class_scope:Empty)
  ))
_sym_db.RegisterMessage(Empty)

ModelStep = _reflection.GeneratedProtocolMessageType('ModelStep', (_message.Message,), dict(
  DESCRIPTOR = _MODELSTEP,
  __module__ = 'chunk_pb2'
  # @@protoc_insertion_point(class_scope:ModelStep)
  ))
_sym_db.RegisterMessage(ModelStep)

ResignFalsePositive = _reflection.GeneratedProtocolMessageType('ResignFalsePositive', (_message.Message,), dict(
  DESCRIPTOR = _RESIGNFALSEPOSITIVE,
  __module__ = 'chunk_pb2'
  # @@protoc_insertion_point(class_scope:ResignFalsePositive)
  ))
_sym_db.RegisterMessage(ResignFalsePositive)

ResignV = _reflection.GeneratedProtocolMessageType('ResignV', (_message.Message,), dict(
  DESCRIPTOR = _RESIGNV,
  __module__ = 'chunk_pb2'
  # @@protoc_insertion_point(class_scope:ResignV)
  ))
_sym_db.RegisterMessage(ResignV)



_FILESERVER = _descriptor.ServiceDescriptor(
  name='FileServer',
  full_name='FileServer',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=248,
  serialized_end=688,
  methods=[
  _descriptor.MethodDescriptor(
    name='upload_play_data',
    full_name='FileServer.upload_play_data',
    index=0,
    containing_service=None,
    input_type=_MOVE,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='list_model_steps_to_eval',
    full_name='FileServer.list_model_steps_to_eval',
    index=1,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_MODELSTEP,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='list_model_steps_archive',
    full_name='FileServer.list_model_steps_archive',
    index=2,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_MODELSTEP,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='download_model_config',
    full_name='FileServer.download_model_config',
    index=3,
    containing_service=None,
    input_type=_MODELSTEP,
    output_type=_CHUNK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='download_model_weight',
    full_name='FileServer.download_model_weight',
    index=4,
    containing_service=None,
    input_type=_MODELSTEP,
    output_type=_CHUNK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='report_better_model',
    full_name='FileServer.report_better_model',
    index=5,
    containing_service=None,
    input_type=_MODELSTEP,
    output_type=_CHUNK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='remove_model',
    full_name='FileServer.remove_model',
    index=6,
    containing_service=None,
    input_type=_MODELSTEP,
    output_type=_CHUNK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='report_resign_false_positive',
    full_name='FileServer.report_resign_false_positive',
    index=7,
    containing_service=None,
    input_type=_RESIGNFALSEPOSITIVE,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ask_resign_v',
    full_name='FileServer.ask_resign_v',
    index=8,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_RESIGNV,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_FILESERVER)

DESCRIPTOR.services_by_name['FileServer'] = _FILESERVER

# @@protoc_insertion_point(module_scope)
